/*****************************************************************        O P E N      M E D I A     T O O L K I T              V2.5             Copyright Yves Schmid 1996-2003         See www.garagecube.com for more informations about this library.                Author(s): Yves Schmid         OMT is provided under LGPL:           This library is free software; you can redistribute it and/or          modify it under the terms of the GNU Lesser General Public          License as published by the Free Software Foundation; either          version 2.1 of the License, or (at your option) any later version.          This library is distributed in the hope that it will be useful,          but WITHOUT ANY WARRANTY; without even the implied warranty of          MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU          Lesser General Public License for more details.          You should have received a copy of the GNU Lesser General Public          License along with this library; if not, write to the Free Software          Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA          The full text of the license can be found in lgpl.txt          ******************************************************************/#ifndef _H_LOMTViewPort#define _H_LOMTViewPort#pragma once#include <LPane.h>#include "OMediaViewPort.h"class LOMTWindow;class	LOMTViewPort : public LPane,					   public LBroadcaster{  public:  	enum { class_ID = 'OMvp' };	LOMTViewPort(LStream*		inStream);	virtual	~LOMTViewPort();	virtual void prepare(LOMTWindow *window);		virtual void	ResizeFrameBy(SInt16		inWidthDelta,								  SInt16		inHeightDelta,								  Boolean		inRefresh);								  	virtual void	MoveBy(SInt32		inHorizDelta,						   SInt32		inVertDelta,						   Boolean		inRefresh);						   	OMediaViewPort	*viewport;	void bounds_changed();	bool			pickingOn;  protected:	virtual void ClickSelf(const SMouseDownEvent&	inMouseDown );	virtual void			MouseDown(const Point& p);//: Mouse down event	virtual void			MouseDrag(const Point& p);// mouse is being dragged		virtual	void DrawSelf(); 		void set_gl_clip();		LOMTWindow					*window;};#endif