/*****************************************************************        O P E N      M E D I A     T O O L K I T              V2.5             Copyright Yves Schmid 1996-2003         See www.garagecube.com for more informations about this library.                Author(s): Yves Schmid         OMT is provided under LGPL:           This library is free software; you can redistribute it and/or          modify it under the terms of the GNU Lesser General Public          License as published by the Free Software Foundation; either          version 2.1 of the License, or (at your option) any later version.          This library is distributed in the hope that it will be useful,          but WITHOUT ANY WARRANTY; without even the implied warranty of          MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU          Lesser General Public License for more details.          You should have received a copy of the GNU Lesser General Public          License along with this library; if not, write to the Free Software          Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA          The full text of the license can be found in lgpl.txt          ******************************************************************/#include "CSoundEditor.h"#include "OMediaSound.h"#include "OMediaSoundChannel.h"#include "OMediaSoundEngine.h"#include "OMediaEngineFactory.h"#include "LOMTWindow.h"CSoundEditor::CSoundEditor(omt_FSChunkID id, CDBDocument *myDocument):				CAbstractEditor(OMediaSound::db_type,id,myDocument){	loopMode = false;		window = LWindow::CreateWindow(2001, this );	window->SetThemeData(kThemeBackgroundPlacard, kThemeBackgroundPlacard,							 kThemeTextColorDialogActive, kThemeTextColorDialogInactive);	setTitle();	window->Show();		sound = (OMediaSound*)object;	soundEngine = OMediaEngineFactory::get_factory()->create_sound_engine(ommeic_Best,(LOMTWindow*)window);	soundEngine->set_nchannels(1);	LStdButton 	*but;	LStdCheckBox *cb;	but = dynamic_cast<LStdButton*>(window->FindPaneByID(0));	but->AddListener(this);	but = dynamic_cast<LStdButton*>(window->FindPaneByID(1));	but->AddListener(this);	cb = dynamic_cast<LStdCheckBox*>(window->FindPaneByID(2));	cb->AddListener(this);}CSoundEditor::~CSoundEditor(){	// Don't need to delete soundEgine, LOMTWindow deletes it for us...}void CSoundEditor::ListenToMessage(	MessageT		inMessage,								void*			ioParam){	SInt32	*value = (SInt32*)ioParam;	switch(inMessage)	{		case 1024:		// Play		soundEngine->get_channel(0)->stop();		sound->play(soundEngine, 0, false, loopMode);		break;				case 1025:		soundEngine->get_channel(0)->stop();		break;		case 1026:		loopMode = (*value)!=0;		break;	}}