/*****************************************************************        O P E N      M E D I A     T O O L K I T              V2.5             Copyright Yves Schmid 1996-2003         See www.garagecube.com for more informations about this library.                Author(s): Yves Schmid         OMT is provided under LGPL:           This library is free software; you can redistribute it and/or          modify it under the terms of the GNU Lesser General Public          License as published by the Free Software Foundation; either          version 2.1 of the License, or (at your option) any later version.          This library is distributed in the hope that it will be useful,          but WITHOUT ANY WARRANTY; without even the implied warranty of          MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU          Lesser General Public License for more details.          You should have received a copy of the GNU Lesser General Public          License along with this library; if not, write to the Free Software          Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA          The full text of the license can be found in lgpl.txt          ******************************************************************/#include "LAquaBackLines.h"LAquaBackLines::LAquaBackLines( LStream* inStream ):LPane(inStream){}LAquaBackLines::~LAquaBackLines(){}void LAquaBackLines::DrawSelf(){	::PenNormal();	ApplyForeAndBackColors();		Rect	frame,r;	CalcLocalFrameRect(frame);		int		w = frame.right-frame.left,			h = frame.bottom-frame.top,			y;	bool	iswhite = false;	const int lineHeight = 2;		RGBColor	white,gray,lgray;		white.red = white.green = white.blue = 0xFFFF;	gray.red = gray.green = gray.blue = 0xEEEE;	lgray.red = lgray.green = lgray.blue = 0xFFEE;		for(y=0;y<h;y+=lineHeight)	{		r.left = frame.left;		r.top = frame.top + y;		r.right = frame.right;		r.bottom = r.top + lineHeight;		if (iswhite) RGBForeColor(&white);		else RGBForeColor(&gray);			::PaintRect(&r);				if (iswhite)		{			RGBForeColor(&lgray);			::MoveTo(r.left, r.top);			::MacLineTo(r.right, r.top);				}				iswhite = !iswhite;	}}